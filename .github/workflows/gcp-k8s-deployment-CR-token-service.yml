name: Deployment - Cloud Run token service

on:
  push:  
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: webhook
  IMAGE: tokenservice-dev

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish and Deploy
    runs-on: ubuntu-latest
    steps:
      # SETUP #
      - uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      
      - name: Test nuget sources
        run: ls -lart
      
      # BUILD #
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore
        
      # RUN UNIT TEST #
      
      # BUILD DOCKER IMAGE #
        
      - name: Set Image Tag
        id: set_image_tag
        run: |
          echo "::set-output name=image_tag::$(date +'%Y%m%d').${{ github.run_number }}_${{ github.sha }}"

      - name: Build Docker Image(s)
        run: |-
          docker build -f Dockerfile-token -t "gcr.io/$PROJECT_ID/$IMAGE:${{ steps.set_image_tag.outputs.image_tag }}" .

      # PUBLISH #
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }} #takes values from general secrets section
          project_id: ${{ env.PROJECT_ID }} #takes values from general secrets section

      - run: |-
          gcloud --quiet auth configure-docker

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ steps.set_image_tag.outputs.image_tag }}"

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }} #takes values from general secrets section
          location: ${{ env.GKE_ZONE }} #takes values from general secrets section
          credentials: ${{ secrets.GKE_SA_KEY }} #takes values from general secrets section

      - name: Deploy Cloud Run
        working-directory: ./CloudFunction
        run: |
          gcloud run deploy ${{ env.IMAGE }} \
          --allow-unauthenticated \
          --region ${{ env.GKE_ZONE }} \
          --port 8080 \
          --image "gcr.io/$PROJECT_ID/$IMAGE:${{ steps.set_image_tag.outputs.image_tag }}" \
          --set-secrets=SB_JWT_CLIENT_KEY=SB_JWT_CLIENT_KEY:1 \
          --set-secrets=SB_JWT_MANAGER_KEY=SB_JWT_MANAGER_KEY:1
